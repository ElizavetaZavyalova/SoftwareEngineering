version: '3.8'

services:
  structurizr:
    image: structurizr/lite
    container_name: structurizr
    ports:
      - "8000:8080"
    volumes:
      - ./architecture:/usr/local/structurizr
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - admin
      - passenger
      - driver
      - adding_trips
      - connect_trips

  admin:
    build:
      context: .
      dockerfile: admin_system.dockerfile
    container_name: admin
    environment:
      DATABASE_PASSENGER_URL: postgresql://root:root@passengers-db:5432/passengers
      DATABASE_ADMINS_URL: postgresql://root:root@admins-db:5432/admins
      DATABASE_DRIVER_URL: postgresql://root:root@drivers-db:5432/drivers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET:  $2b$12$abcdefghijklmnopqrstuu
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8001:8000"
    depends_on:
      - postgres-admins
      - postgres-drivers
      - postgres-passengers

  passenger:
    build:
      context: .
      dockerfile: account_system_passenger.dockerfile
    container_name: passenger
    environment:
      DATABASE_PASSENGER_URL: postgresql://root:root@passengers-db:5432/passengers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET:  $2b$12$abcdefghijklmnopqrstuu
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8002:8000"
    depends_on:
      - postgres-passengers

  driver:
    build:
      context: .
      dockerfile: account_system_driver.dockerfile
    container_name: driver
    environment:
      DATABASE_DRIVER_URL: postgresql://root:root@drivers-db:5432/drivers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET:  $2b$12$abcdefghijklmnopqrstuu
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8003:8000"
    depends_on:
      - postgres-drivers

  adding_trips:
    build:
      context: .
      dockerfile: driver_system_adding_trip.dockerfile
    container_name: adding_trips
    environment:
      DATABASE_DRIVER_URL: postgresql://root:root@drivers-db:5432/drivers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET:  $2b$12$abcdefghijklmnopqrstuu
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8004:8000"
    depends_on:
      - postgres-drivers

  connect_trips:
    build:
      context: .
      dockerfile: driver_system_connect_trip.dockerfile
    container_name: connect_trips
    environment:
      DATABASE_PASSENGER_URL: postgresql://root:root@passengers-db:5432/passengers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET: $2b$12$abcdefghijklmnopqrstuu
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8005:8000"
    depends_on:
      - postgres-passengers

  postgres-passengers:
    image: postgres:15.5
    container_name: passengers-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: passengers
    ports:
      - "5502:5432"
    volumes:
      - ./passenger_migrations/:/docker-entrypoint-initdb.d/
  postgres-drivers:
    image: postgres:15.5
    container_name: drivers-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: drivers
    ports:
      - "5501:5432"
    volumes:
      - ./drivers_migrations/:/docker-entrypoint-initdb.d/
  postgres-admins:
    image: postgres:15.5
    container_name: admins-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: admins
    ports:
      - "5503:5432"
    volumes:
      - ./admins_migrations/:/docker-entrypoint-initdb.d/

volumes:
  passengers-db:
  drivers-db:
  admins-db:
