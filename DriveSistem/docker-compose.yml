version: '3.8'

services:
  structurizr:
    image: structurizr/lite
    container_name: structurizr
    ports:
      - "8000:8080"
    volumes:
      - ./architecture:/usr/local/structurizr
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_gateway
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - admin
      - passenger
      - driver
      - adding_trips
      - connect_trips
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/health" ]
      interval: 60s
      timeout: 5s
      retries: 3

  admin:
    build:
      context: .
      dockerfile: admin.dockerfile
    container_name: admin
    environment:
      DATABASE_PASSENGER_URL: postgresql://root:root@passengers-db:5432/passengers
      DATABASE_ADMINS_URL: postgresql://root:root@admins-db:5432/admins
      DATABASE_DRIVER_URL: postgresql://root:root@drivers-db:5432/drivers
      DATABASE_TRIPS_URL: mongodb://root:root@trips-mongo:27017/
      ACCOUNT_CASH: mabe_add_cash_late
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET:  "$$2b$$12$$abcdefghijklmnopqrstuu"
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8001:8000"
    depends_on:
      - postgres-admins
      - postgres-drivers
      - postgres-passengers
      - mongo-trips
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8000/health" ]
      interval: 60s
      timeout: 5s
      retries: 3

  passenger:
    build:
      context: .
      dockerfile: passenger.dockerfile
    container_name: passenger
    environment:
      DATABASE_PASSENGER_URL: postgresql://root:root@passengers-db:5432/passengers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      REDIS_PASSWORD_CASH: redis://reg-passengers-db:6379/0
      CASH: redis://cash-passengers-db:6379/0
      ALGO_SECRET: HS256
      SALT_SECRET:  "$$2b$$12$$abcdefghijklmnopqrstuu"
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8002:8000"
    depends_on:
      - postgres-passengers
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8000/health" ]
      interval: 60s
      timeout: 5s
      retries: 3

  driver:
    build:
      context: .
      dockerfile: driver.dockerfile
    container_name: driver
    environment:
      DATABASE_DRIVER_URL: postgresql://root:root@drivers-db:5432/drivers
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      REDIS_PASSWORD_CASH: redis://reg-drivers-db:6379/0
      CASH: redis://cash-drivers-db:6379/0
      ALGO_SECRET: HS256
      SALT_SECRET:  "$$2b$$12$$abcdefghijklmnopqrstuu"
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8003:8000"
    depends_on:
      - postgres-drivers
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8000/health" ]
      interval: 60s
      timeout: 5s
      retries: 3

  adding_trips:
    build:
      context: .
      dockerfile: adding_trip.dockerfile
    container_name: adding_trips
    environment:
      DATABASE_DRIVER_URL: postgresql://root:root@drivers-db:5432/drivers
      DATABASE_TRIPS_URL: mongodb://root:root@trips-mongo:27017/
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET:  "$$2b$$12$$abcdefghijklmnopqrstuu"
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8004:8000"
    depends_on:
      - postgres-drivers
      - mongo-trips
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8000/health" ]
      interval: 60s
      timeout: 5s
      retries: 3

  connect_trips:
    build:
      context: .
      dockerfile: connect_trip.dockerfile
    container_name: connect_trips
    environment:
      DATABASE_PASSENGER_URL: postgresql://root:root@passengers-db:5432/passengers
      DATABASE_TRIPS_URL: mongodb://root:root@trips-mongo:27017/
      TOKEN_SECRET: 6916734b2465caf22d851d987cb36b739fb10257a0b79166ea0209da3edbfea6
      ALGO_SECRET: HS256
      SALT_SECRET: "$$2b$$12$$abcdefghijklmnopqrstuu"
      HOST: 0.0.0.0
      PORT: 8000
    restart: always
    ports:
      - "8005:8000"
    depends_on:
      - postgres-passengers
      - mongo-trips
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8000/health" ]
      interval: 60s
      timeout: 5s
      retries: 3

  postgres-passengers:
    image: postgres:15.5
    container_name: passengers-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: passengers
    ports:
      - "5502:5432"
    volumes:
      - ./migrations/passenger_migrations/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d passengers" ]
      interval: 60s
      timeout: 5s
      retries: 5

  postgres-drivers:
    image: postgres:15.5
    container_name: drivers-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: drivers
    ports:
      - "5501:5432"
    volumes:
      - ./migrations/drivers_migrations/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d drivers" ]
      interval: 60s
      timeout: 5s
      retries: 5

  redis-reg-passengers:
    image: redis:7.2
    container_name: reg-passengers-db
    ports:
      - "6381:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5

  redis-cash-passengers:
    image: redis:7.2
    container_name: cash-passengers-db
    ports:
      - "6382:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5

  redis-reg-drivers:
    image: redis:7.2
    container_name: reg-drivers-db
    ports:
      - "6383:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5

  redis-cash-drivers:
    image: redis:7.2
    container_name: cash-drivers-db
    ports:
      - "6384:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 5s
      retries: 5

  postgres-admins:
    image: postgres:15.5
    container_name: admins-db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: admins
    ports:
      - "5503:5432"
    volumes:
      - ./migrations/admins_migrations/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d admins" ]
      interval: 60s
      timeout: 5s
      retries: 5

  mongo-trips:
    image: mongo:6.0
    container_name: trips-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: trips
    ports:
      - "27018:27017"
    volumes:
      - ./migrations/trips_migrations/:/docker-entrypoint-initdb.d/
    healthcheck:
      test: [ "CMD", "mongosh", "--username", "root", "--password", "root", "--eval", "mongo.adminCommand('ping')" ]
      interval: 60s
      timeout: 10s
      retries: 5

volumes:
  passengers-db:
  drivers-db:
  admins-db:
  trips-mongo:
